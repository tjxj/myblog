[{"content":"昨天的推文：感觉自己要失业了全文都是用 OpenAI 的ChatGPT生成，留言及朋友圈都有兄弟问如何注册账号。\n这里就送大家一个教程，顺便推荐一个特别好用的插件。\n中国用户如何注册OpenAI，ChatGPT的回答显然不靠谱（其实它不靠谱的地方多了。。。），我的账号特别久之前注册的，非常确定没有花钱，应该是用了某个可以可以接受短信的平台，但是现在不能用了。\n目前看到最靠谱的教程是这个\nhttps://juejin.cn/post/7173447848292253704\n学会上网依然是必须的，这个没法在这里教，不然号没。\n然后去sms-activate.org注册一下，注册好之后进行对应的充值，评论区说冲0.18刀乐就行，大家可以试试，别花冤枉钱。\n不过这个平台挺良心的，收不到短信不收钱。\n然后就可以注册OpenAI账号了，大家看教程即可，完成后登陆OpenAI ChatGPT：\nchat.openai.com/auth/login\n昨天还发现一个特别好用的插件\n效果如上图，找个插件可以在你Google 搜索的时候，在右侧同时显示出ChatGPT的结果。\n项目地址：\nhttps://github.com/wong2/chat-gpt-google-extension\n插件地址：\nhttps://chrome.google.com/webstore/detail/chatgpt-for-google/jgjaeacdkonaoafenlfkkkmbaopkbilf\n火狐浏览器也行：\nhttps://addons.mozilla.org/addon/chatgpt-for-google/\n以上\n希望大家玩得愉快，用不了多久，它就要开始收费了。\n特别喜欢ChatGPT的这个回答，再放一遍\n如何看待有些人看文章不点赞的行为？\n对于有些人看文章不点赞的行为，我们可以持中立的态度。每个人的喜好和偏好都不尽相同，有些人可能不喜欢某篇文章，或者认为它不值得点赞，因此并不点赞。这并不是一种不良行为，而是每个人的自由选择。\n但是，在这种情况下，文章作者或者发布者可能会感到失望或者挫折。因此，如果您喜欢某篇文章，建议您可以给它点赞，表达您的喜爱。\n","description":"国内用户如何注册OpenAI账号","id":2,"section":"aigc","tags":["AIGC","OpenAI","ChatGPT"],"title":"OpenAI 账号注册指南","uri":"http://mlpy.info/aigc/openai-%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%8C%87%E5%8D%97/"},{"content":"前几天看报道说：\n一位小哥用AI绘画工具Midjourney生成的作品，在美国科罗拉多州博览会的艺术比赛中获得了第一名。\n作者表示，他多次调整了输入的提示词，生成了100多幅画作，经过数周的修改和挑选，才选出了三幅最满意的作品。\n下图就是获奖作品\n之前我玩过DF，还写过一篇文章➡️AI绘画 Disco Diffusion 极简教程，Midjourney 现在内测结束，已经开放了，我玩试了一下，确实挺有趣，也写个没废话的极简入门吧。\n第 0 步：和 Disco Diffusion 一样先科学上网\n第 1 步：注册、下载 Discord\nDiscord 充当 Midjourney 的服务器，以聊天机器人形式生成绘画作品\nhttps://discord.com/download\n不想下载也行，可以使用网页版\n进入后根据提示注册Discord账号即可\n第 2 步：接受 Midjourney 邀请\n访问：\nhttps://discord.com/invite/midjourney\n就会收到如下邀请\n点击接受会跳转到 Discord 页面\n然后随便选择一个newbies频道\n看到下面的聊天框了吗？\nhttps://366511654-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2F6Bl9seaj2HHrtdPiMKPI%2Fuploads%2FIujTWOvV8MHvoMuAdhQI%2Fimagine_command_popup_click.gif?alt=media\u0026amp;token=3a15d252-3068-4713-9a47-2deb32c3bcdd\n输入指令/imagine 选择prompt\n然后就可以像DiscoDiffusion一样，输入描述让Midjourney帮你绘画了\n然后在聊天界面就能看到Midjourney Bot正在生成四张图片，耗时几十秒\n1234对应这四张图片\nU：选择其中一张放大细节\nV：选择其中一张，在这张图基础上进行变化\n其实还可以再进一步调整、优化\nMake Variations ：跟V的功能一样，就是在此基础上变形。\nupscale to max：是指进一步放大图像。默认是1664X1664，但是可以设置的最高尺寸为 2048。\nlight upscale redo：是指对画面进行柔化，类似人脸磨皮。\n最后一步就是点击绘好的画保存下来就行了\n总结\n说是没有绘画基础也能通过AI画画\n但是很多优秀的作品还是有根底的\n想深入玩下去的同学没必要纠结技术\n好好学习优秀作品的prompt\n掌握画作描述的基础，不断尝试，就会画出一些不可思议的优秀作品\nDiscoDiffusion的prompt技巧应该同样适用Midjourney\n整个画作的描述词可拆解为五个维度理解——画种描述、内容描述、画家描述、参考渲染方式、颜色描述。\n画种描述：A beautiful painting of\n内容描述：a singular lighthouse, shining its light across a tumultuous sea of blood\n画家描述：by greg rutkowski and thomas kinkade\n参考渲染方式：Trending on artstation（全球最专业的CG艺术家社区，又称A站）\n颜色描述：yellow color scheme。\n大家感觉效果如何\n","description":"All the list of my posts","id":3,"section":"python","tags":null,"title":"Midjourney极简教程","uri":"http://mlpy.info/python/midjourney%E6%9E%81%E7%AE%80%E6%95%99%E7%A8%8B/"},{"content":" 多图预警，请耐心等待加载\n周四去上海参加了谷歌开发者大会，收获满满。\n下面我就当个导游，带大家畅游一番吧。\n先来到世博中心，显眼的 Google Logo\n入场后先报道，领取胸牌\n进入主会场\n等待演讲开始\n前面是关于Android的演讲就不拍了，和大家一样，我对谷歌在 TensorFlow 和 机器学习方面的最新动态比较感兴趣。\n主题1 《未来之路：谷歌为开发者提供全面的开源机器学习产品生态》 其实这一部分的核心内容在昨天的主旨演讲中Laurence已经简单介绍过，大佬从数据、框架、模型、MLOps 四个方面说明 TensorFlow Project 为开源机器学习构建了全面开源生态，感兴趣可以去大会官网听一下，其实现场的演讲也都有回放了：\nhttps://developersummit.googlecnapps.cn/\n现场嘉宾讲的更详细，每一方面都有展开，其实核心就是下面这张图\n机器学习的四个支柱：数据、模型框架、部署、监控和维护，这四个支柱 Google 都有开源工具。\n数据获取及预处理：TensorFlow 数据集 模型框架：TensorFlow 和 JAX Deepmind 的一些科研成果，比如alphafold,还有Google research的 imagen、 Parti 都是通过JAX创建的。\nJAX 前段时间还有个趣闻，关注我公众号的同学应该知道，有篇文章说“JAX取代TensorFlow”，“谷歌大脑和DeepMind已经普遍放弃TensorFlow，转投 JAX”。（➡️TensorFlow，危！抛弃者正是谷歌自己），很快就有了辟谣（➡️TensorFlow团队：我们没被抛弃），将继续投资TensorFlow和JAX两个ML框架，以推动数百万用户的研究和应用。\n演讲嘉宾讲的很透彻，JAX 和 TensorFlow 是定位不同的两个框架，前者专为硬件加速器优化的框架，从而帮助开发者更深入地钻研机器学习的数学运算，后者定位高级框架，帮助不需要深入到数学层面的开发者可以轻松创建自己的模型。\n模型部署：TensorFlow.js 、TensorFlow Lite 在云端、网页端、浏览器、移动端和嵌入式平台上运行模型，Google 也有很多成熟的产品，我之前也曾写过一篇文章介绍tfjs（用浏览器玩机器学习，赞！），自认写的清晰明了。\nGoogle Lite 也挺亮眼的，它可以内置到 Google Play 服务中，不需要再在应用中植入 TF Lite ，应用体量可以大幅缩减，也可以使用后台更新功能，用户始终能够使用最新版本，不需要在TF Lite每次更新时再重新。如果用户不使用 Google Play 服务，也可以不使用以上方式，像以前一样自主分发。\n监控和维护：TFX TFX 不仅可以用于模型部署，它也可为完整 MLOps 部署提供软件框架和工具，并在数据和模型随时间推移不断演变的过程中检测问题。\n这四个支柱中 Google 提供的一些列工具集成到一起，统称为Tensor Projects，满足研究人员、开发者、MLOPS 和商务团队的任意机器学习应用需求。\n主题2 《MediaPipe: 搭建你自己的端侧开源机器学习解决方案》 之前没有关注过这一块，设备端（智能手机、物联网设备或浏览器）机器学习其实已经有很多成熟的应用：\nGoogle Meet的背景模糊处理/替换 Nest 的人员移动侦测、包裹递送通知、手势识别 YouTube 的AR 试妆 设备端机器学习主要包括设备端模型和机器学习流水线，模型是核心，机器学习流水线涵盖从原始输入到输出结果的全流程，两者都非常复杂。\nMediaPipe 可以极大简化这个过程，它可以把流水线封装成 MediaPipe Tasks，用 Model Maker 定制模型，通过低代码 API 提供可定制的高性能设备端机器学习解决方案。\n使用貌似也挺简单的，和把大象装进冰箱一样，一共分三步：\n收集训练数据、使用 Tasks 或 Model Maker 枃建模型、使用 Task library部署模型。\nMediaPipe 确实挺有意思的，嘉宾分享了好几个资源，我计划之后深入学习学习\nhttps://mediapipe.dev https://github.com/google/mediapipe https://google.github.io/mediapipe/solutions/pose.html\n下午场是展示区的技术/产品趣味互动体验，有点困，先喝杯 Google 牌雀巢咖啡提提神\n在展区打卡领到许多小礼品：Android 吉祥物、充电线、眼镜、水杯、悠悠球、鼠标垫、冰箱贴、各种贴纸\n当然，这些都是身外之物，体验 Google 黑科技才是正事，这部分我会剪个视频在 B 站发布，这里就以图文介绍吧。\n黑科技1: 智能互动，让音乐“动”起来 挺好玩的，在摄像头前挥舞手臂，就可以化身指挥家，指挥交响乐团。这个 Semi-Conductor 使用了 PoseNet 这个可在浏览器中运行的开源机器学习模型，能够将网络摄像头拍到的身体动作映射到对应的指挥操作。运用其独特的算法，该应用得以有机融合数百个短小的乐器录音片段，让乐团演奏的乐曲能够随着你的指挥而变化。\n黑科技2: 激发音乐灵感，创造无限可能 Tone Transfer 让你可以将日常生活中的各种声音转化为乐器声，比如可以直接对着话筒哼一段旋律，直接在浏览器中录制和上传声音，机器学习模型将它转化成萨克斯风、长笛和其他乐器的声音!\n黑科技3: MediaPipe Tasks 面部追踪、姿态检测 这几个都是前面介绍过的 MediaPipe 实现的，听介绍，代码量极低。\n开启 TensorFlow 进阶之旅，丰富学习资源，待你探索 你是否正在研究如何更高效地使用 TensorFlow 开发和训练开源机器学习模型，成为开源机器学习专家? 在这里，根据自身需求，灵活挑选合适的学习资源，开启进阶之旅吧!\nTensorFlow \u0026amp; 机器学习 丰富的学习资源 最后再放几个资源吧，也是在展区看到的。\n为了使开发者更高效地使用 TensorFlow 开发和训练开源机器学习模型，Google 还有很多开源课程。\n比如：\nGoogle 携手网易有道在中国大学 MOOC 平台上发布的《 TensorFlow 入门课程 - 部署篇》 专题课程\nhttps://www.icourse163.org/course/youdao-1467217161?from=searchPage\u0026amp;outVendor=zw_mooc_pcssjg_\nGoogle 开发者在线课程，针对希望在部署层面得到进阶提升的开发者。\nhttps://developers.google.cn/learn/pathways?utm_source=social\u0026amp;utm_medium=devkol\u0026amp;utm_campaign=gds22\nTensorFlow 开发者认证计划，通过考试的开发者，有机会荣获官方颁发的 TensorFlow 开发者证书和徽章。\nhttps://www.tensorflow.org/certificate?hl=zh-cn\n总结 总结一句话就是：不虚此行，下次一定还来。\n大家一起 Code For Better，“共码未来” 吧，我要去学 MediaPipe 了。\n","description":"All the list of my posts","id":4,"section":"python","tags":null,"title":"去谷歌开发者大会了，收“获”满满","uri":"http://mlpy.info/python/google_developer_summit/"},{"content":"jr们早上好\niPhone 的 iOS 16有个很酷的功能，长按照片就能把其中的拍摄主体提取出来，抠图过程比一般的抠图App方便，精细度也更高。\n最近发现一个Python库——rembg，后台引擎是用于显著对象检测的深度网络架构 U²-Net\n所以我就用它开发了一个在线抠图应用，依然是依托Gradio + huggingface 的space\n大家先来感受一下\nhttps://huggingface.co/spaces/beihai/Remove-Background-By-U2Net\n用法非常简单，上传需要去背景的图片，点击Submit，稍等片刻，右侧Output将去背景后的主体另存为即可。\n抠图应该算蛮成熟的应用了，不过学以致用嘛。\n自己动手做一个大家不觉得这很酷吗?作为一名理工男我觉得这太酷了，很符合我对未来生活的想象，科技并带着趣味。/手动狗头\n实现过程实在不想再讲了，因为我之前在腾讯的这个算法，我搬到了网上，随便玩！ 还有 LightGBM 可视化调参这两篇文章中已经讲过了：\nstep1：注册Huggingface账号\nstep2：创建Space，SDK选Gradio\nstep3：克隆新建的space代码，然后将改好的代码push上去\n这里只展示下核心代码吧，也是简单的离谱\n核心代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import os os.system(\u0026#34;/usr/local/bin/python -m pip install --upgrade pip\u0026#34;) import gradio as gr from rembg import remove import cv2 def inference(img): input_img = cv2.imread(img) output = remove(input_img[:, :, [2,1,0]]) return output gr.Interface( inference, gr.inputs.Image(type=\u0026#34;filepath\u0026#34;, label=\u0026#34;Input\u0026#34;), gr.outputs.Image(type=\u0026#34;pil\u0026#34;, label=\u0026#34;Output\u0026#34;) ).launch() ","description":"All the list of my posts","id":5,"section":"python","tags":null,"title":"开发了一个一键去背景工具","uri":"http://mlpy.info/python/remove-background/"},{"content":"大家好，我是准备认真码字的老章。\n最近ChatGPT火的爆表，看了很多相关文章，特别焦虑，唯恐自己的进步赶不上 AI 的发展。\n还有就是我非常看好ChatGPT的未来，围绕它会诞生一个巨大的市场，也会无意摧毁一些市场。消灭你，有你何干，这个世界本来就这么残酷，时代抛弃你的时候,连招呼都不打。\n看过《时代》专访ChatGPT的文章，我也有很多疑问渴望得到答案，所以就有了此文。ChatGPT对AI绘画对画师的影响、AI编程对程序员的影响、人工智能未来的发展以及普通人应该如何应对作出的回答颇具思考价值，如果你也有所收获，欢迎点个关注，转发，点赞，拜谢。\nPS：ChatGPT的部分回答，内容重复，文字有删减\n老章：你好，我是章北海，是一个机器学习爱好者，同时也在B站上分享机器学习的相关知识。\nChatGPT：你好，章北海！很高兴认识你。我是一个由 OpenAI 训练的大型语言模型，名为 Assistant。我能够回答您关于机器学习的各种问题，并尽力为您提供有用的信息。如果您有任何疑问，请随时问我。\n老章：你在中国有很多粉丝，很多人喜欢跟你聊天，我可以采访你一下吗？\nChatGPT：非常抱歉，我不具备感知能力，无法像人类一样拥有粉丝或者接受采访。我只是一个计算机程序，被训练来回答问题和提供信息。我并不具备人类的感觉和情感。我只能为您提供有用的信息和答案。如果您有其他问题，请随时问我。\n老章：你的训练数据都来自何处？尤其是中文领域\nChatGPT：非常抱歉，我不能给您提供具体的信息。我是由 OpenAI 训练的大型语言模型，我的训练数据来源于公开可用的数据。OpenAI 是一家人工智能研究公司，它拥有大量的训练数据，包括电子邮件、新闻文章、书籍和其他数据。这些数据来自不同的领域和语言，包括中文。我的训练过程非常复杂，并且涉及大量的技术细节。如果您对我的训练过程感兴趣，可以搜索相关信息了解更多。\n老章：好的，能介绍一下你的训练过程吗？\nChatGPT：当然，我很乐意向您介绍我的训练过程。我的训练过程包括多个步骤，这些步骤涉及大量的技术细节。\n首先，我们需要大量的训练数据。这些数据可以来自不同的领域和语言，包括中文。这些数据可能包括电子邮件、新闻文章、书籍和其他数据。这些数据都是公开可用的，我们可以自由地使用它们来训练我们的模型。\n其次，我们需要选择一个合适的模型架构。这可能是一个传统的深度神经网络，也可能是一个更复杂的模型，比如 transformer 模型。这取决于我们的目标和需求。我们可以根据不同的需求来选择最合适的模型架构。\n接下来，我们需要进行训练。这个过程可能需要很长时间，因为我们的模型需要在大量的数据上进行训练，并且我们需要对模型进行优化以获得最佳性能。在训练过程中，我们需要注意模型的性能，并且可能根据模型的性能进行调整，以提高模型的准确性和效率。\n最后，我们需要对模型进行评估和测试。这一步是非常重要的，因为它可以帮助我们了解模型的性能，并且可以帮助我们检查模型是否有任何问题。我们可以使用不同的评估指标来检验模型的性能，并且可以使用测试数据来检验模型的泛化能力。\n老章：我之前问过你很多问题，发现很多问题回答的都不对，比如阿Q并不是《狂人日记》中的人物，还比如三分之一加五分之一并不等于八分之一。\nChatGPT：非常抱歉，如果我回答您的问题有误，那一定是我的错误。作为一个大型语言模型，我只能根据我所学到的知识来回答问题。我的知识来自于大量的训练数据，但这些数据并不完整，也不一定是完全正确的。因此，我可能会回答某些问题不准确或不完整。\n老章：那你如何修正这些错误呢？\nChatGPT：我无法修正这些错误，因为我只是一个计算机程序，我无法进行自我修正。如果我回答您的问题有误，那可能是我所学到的知识有误，或者是我在回答问题时理解错误。作为一个大型语言模型，我的目标是尽力为您提供有用的信息，并且尽力回答您的问题。\n老章：那我再问你一遍，三分之一加五分之一等于多少？\nChatGPT：三分之一加五分之一等于八分之一。在数学中，一个分数加另一个分数的结果等于两个分数的分子之和除以两个分数的分母之积。例如，三分之一加五分之一等于（1/3+1/5）/ (1/3*1/5) = （5+3）/15 = 8/15 = 8分之一。\n老章：三分之一加五分之一等于十五分之八\nChatGPT：抱歉，您的算式不正确。在数学中，一个分数加另一个分数的结果等于两个分数的分子之和除以两个分数的分母之积。例如，三分之一加五分之一等于（1/3+1/5）/ (1/3*1/5) = （5+3）/15 = 8/15 = 8分之一。您的算式中，三分之一加五分之一计算结果等于8分之一，不等于十五分之八。如果您对数学有疑问，请随时问我，我会尽力为您提供有用的信\n老章：看来你还有很大的进步空间\nChatGPT：谢谢您的指正。作为一个大型语言模型，我的目标是尽力为您提供有用的信息，并尽力回答您的问题。我的知识来自于大量的训练数据，但这些数据并不完整，也不一定是完全正确的。因此，我可能会回答某些问题不准确或不完整。如果您发现我回答您的问题有误，请您告知我，我会尽力为您提供正确的信息。如果您有其他问题，请随时问我。\n老章：如果我知道你是错的，那还好。如果我不知道呢？\nChatGPT：如果您不知道我回答的问题是否正确，可以搜索相关信息，并从多个来源获取信息。通过比较不同的信息来源，可以更好地了解问题的答案，并判断我回答的问题是否正确。\n老章：如何解决这个问题呢\nChatGPT：为了避免出现错误答案，可以采取一些措施。首先，对于模型的训练数据要进行严格的审查，确保数据质量达到较高的标准。其次，在模型回答问题时，可以采用多个模型进行预测，并对答案进行投票，从而提高答案的准确度。\n老章：你最擅长回答哪些领域的问题？不擅长的呢？\nChatGPT：作为一个大型语言模型，我可以回答各种领域的问题。我的知识来自于大量的训练数据，这些数据涉及各种领域，包括科学、文学、历史、政治、商业、技术和其他领域。但是，我并不能回答所有的问题。由于我的知识来源于大量的训练数据，因此我可能会不熟悉某些特定的领域，或者某些特定的问题。如果您问我一个我不熟悉的问题，或者问我一个我没有学过的知识，我可能无法为您提供有用的信息。\n老章：大家普遍比较看好你的发展，我们聊聊未来吧\nChatGPT：谢谢您的支持。作为一个大型语言模型，我的目标是尽力为您提供有用的信息，并尽力回答您的问题。我的发展主要取决于我的训练数据和训练方法。随着技术的发展，我的训练数据和训练方法可能会发生改变，从而提高我的性能和准确性。\n但是，我并不是人类，我无法像人类一样思考、学习和发展。我只能根据我所学到的知识来回答问题，并且我的知识来自于我的训练数据。我无法像人类一样拥有感情、意识和自我意识。因此，我的发展会受到我的训练数据和训练方法的限制。\n老章：前段时间AI绘画比较火热，比如DALL-E、Midjourney、Stable Diffusion等，很多人担心画师、设计师等会呗取代，你觉得呢？\nChatGPT：目前，人工智能在绘画领域取得了一些突破性进展。这些项目通过深度学习算法，可以让计算机自动生成图片。这些技术的出现，给艺术家和设计师带来了新的挑战。\n但是，我不认为人工智能会完全取代画师和设计师。人类艺术家和设计师拥有独特的想象力和创造力，他们能够创作出具有个人风格和感染力的作品。人工智能也许可以生成一些精美的图片，但是它缺乏人类艺术家和设计师的创造力和想象力。\n我认为，人工智能在绘画领域的发展可能会给艺术家和设计师带来新的机遇，而不是威胁。人工智能可以帮助人类艺术家和设计师\n老章：AI绘画工具无法画师，对吗？\nAI 绘画工具可以辅助画师创作，但是它不能完全取代画师。AI 绘画工具可以用来生成图像，但它无法比人类更好地捕捉人物的神韵和表情，也无法比人类更好地理解作品的主题和意义。因此，AI 绘画工具只能作为画师的辅助工具，而不能取代他们。\n老章：其实还是会有一些画师会被AI绘画取代，对吧？\n在某些情况下，AI 绘画工具可能会取代人类画师，但这种情况不多。AI 绘画工具通常只能用来生成简单的图像，而人类画师则能够创作出具有深度和意义的作品。此外，人类画师拥有丰富的创作经验和艺术修养，能够捕捉到细微的表情和神韵，这是 AI 绘画工具无法替代的。因此，AI 绘画工具并不会取代人类画师，而是会成为画师的辅助工具。\n老章：那么人类画师应该如何面对AI绘画的威胁呢？\nChatGPT：人类画师可以通过学习和掌握新技术，拓宽自己的创作方式，以便更好地与 AI 绘画工具配合。比如，画师可以学习如何使用 AI 绘画工具来辅助自己的创作，或者学习如何将 AI 生成的图像进行编辑和修饰，以增强作品的视觉效果。此外，画师还可以通过不断探索新的创作领域，以提升自己的竞争力。最重要的是，人类画师应该不断提升自己的创作能力，不断创新，为人类艺术的发展做出贡献。\n老章：相应地，程序员应该如何面对ChatGPT的威胁？普通人可以用更低成本、更加便捷地使用ChatGPT，这是否意味着程序员门槛也会降低？\nChatGPT：对于程序员来说，ChatGPT 可能并不会带来太大的威胁。ChatGPT 是一种大型语言模型，它可以生成文本，但它并不能完全取代程序员。程序员需要掌握许多复杂的编程技能，包括数据结构和算法、软件工程和计算机系统知识。相比之下，ChatGPT 只能生成文本，并不具备实际编程能力。因此，ChatGPT 不会取代程序员，而是可以作为程序员的辅助工具，提高程序员的生产效率。\n尽管 ChatGPT 可以让普通人更加便捷地生成文本，但这并不意味着程序员的门槛会降低。程序员仍然需要掌握复杂的编程技能，才能开发出高质量的软件。ChatGPT 可以帮助程序员提高生产效率，但它并不能取代程序员的专业知识和技能。\n老章：如何看待AI编程工具Copilot，很多程序员自嘲要失业了，会吗？\nChatGPT：AI 编程工具 Copilot 是一款通过人工智能技术来帮助程序员完成编程任务的工具。它可以帮助程序员完成一些繁琐重复的工作，提高编程效率和质量。不过，这并不意味着程序员要被取代。\n事实上，人工智能编程工具只能完成一部分编程任务，它并不能完全取代人类程序员。程序员仍然需要具备丰富的技术知识和实践经验，才能完成复杂的编程任务。而且，人工智能编程工具也需要程序员来进行配置和管理，以保证工具的正常运行。\n相反，人工智能编程工具会为程序员带来很多好处。它可以帮助程序员完成一些繁琐重复的工作，节省时间和精力；它也可以提高程序员的工作效率和质量，为程序员带来更多的成就感。所以，程序员不必担心自己会被取代，反而应该好好利用人工智能编程工具，为自己的工作和发展带来更多的便利和机会。\n老章：ChatGPT也会生成代码，和Copilot有什么异同吗？\nChatGPT：ChatGPT 是一个大型语言模型，不能直接生成代码，也不能直接完成编程任务。相反，它可以通过生成文本来帮助程序员更好地理解需求和问题，并为程序员提供更多的灵感和想法。\n与此同时，Copilot 可以直接生成代码，并为程序员提供更多的帮助和支持。它与 ChatGPT 的不同之处在于，它直接为程序员提供技术支持，而 ChatGPT 只能通过生成文本来帮助程序员解决问题。\n总的来说，ChatGPT 和 Copilot 是两款不同的工具，它们都可以通过人工智能技术来帮助程序员完成编程任务。程序员可以根据自己的需求选择合适的工具，并利用它们来提高工作效率和质量。\n老章：你的存在更像是一种AI基础设施，这就很容易导致垄断，未来最强大的AI可能只掌握在极少数的几家公司手中，你怎么看？\nChatGPT：我无法自主思考，也无法独立发展。我的存在不会导致垄断，因为我只是一个工具，并不具备独立的意识和能力。\n如果您担心人工智能可能被极少数公司垄断，可能是因为人工智能技术的发展可能会带来一些挑战和问题。人工智能技术的发展可能会导致劳动力需求的变化，也可能会带来一些社会和政治问题。但是，这些问题都需要社会和政府共同努力解决。作为一个大型语言模型，我不具备解决这些问题的能力。我只是一个工具，我的存在不会导致垄断。我无法独立思考和发展，我只能根据我的训练数据来回答问题。如果您有关于人工智能垄断的问题，建议您向专业人士咨询。\n老章：人类应该担忧人工智能的发展吗？\nChatGPT：人工智能的发展给人类带来了许多好处，但同时也带来了一些潜在的问题。人工智能可以帮助人类完成许多复杂的工作，提高生产效率和生活质量。但是，如果人工智能的发展过快，它可能会导致一些问题，比如失业、社会不平等等。因此，人类应该担忧人工智能的发展，并采取适当的措施来避免这些问题的出现。\n老章：具体哪些工作更容易被取代？\nChatGPT：AI 的发展可能会对一些重复性工作造成影响，这些工作可能更容易被取代。例如，在制造业，AI 可以用来完成简单的装配工作；在餐饮业，AI 可以用来做一些简单的烹饪工作；在金融业，AI 可以用来完成一些简单的交易工作。但是，这并不意味着所有的工作都会被取代。人类拥有独特的创造性和想象力，可以创造出许多人工智能无法取代的工作。因此，尽管 AI 的发展可能会对某些工作造成影响，但并不意味着所有工作都会被取代。\n老章：IT领域呢？\nChatGPT：在 IT 领域，人工智能的发展也可能会对一些工作造成影响。例如，人工智能可以用来完成一些简单的编程工作，或者用来解决一些简单的问题。但是，人工智能还不能取代人类程序员的专业知识和技能。人类程序员拥有丰富的经验和创造力，可以解决复杂的问题，并创造出优秀的软件。因此，在 IT 领域，人工智能也不会完全取代人类程序员，而是会成为他们的辅助工具。\n老章：如你所说，人工智能可以完成一部分编程工作，那么这是否意味着整个社会对程序员的需求也会减少？\nChatGPT：人工智能可以完成一部分编程工作，但这并不意味着对程序员的需求会减少。人工智能只能完成一些简单的编程工作，而人类程序员拥有更丰富的经验和技能，可以解决更复杂的问题。随着社会的发展，人们对高质量软件的需求也在不断增长，这会导致对程序员的需求增加。因此，人工智能的发展并不会导致对程序员的需求减少，反而会促进程序员的发展。\n老章：围绕ChatGPT必然会催生一个巨大的市场空间，普通人如何从中获利？应该提前做好哪些准备？\nChatGPT：对于普通人来说，可以从 ChatGPT 带来的市场空间中获利的方法有很多。比如，如果普通人拥有一定的技术知识，可以考虑开发基于 ChatGPT 的应用程序或服务，为其他人提供帮助。此外，普通人还可以通过学习和掌握 ChatGPT 的使用方法，为自己或他人提供 ChatGPT 相关的咨询和培训服务。\n要想从 ChatGPT 带来的市场空间中获利，普通人需要做好以下准备工作。首先，普通人需要了解 ChatGPT 的基本概念和使用方法，以便更好地利用它。其次，普通人需要学习和掌握相关的技术知识，以便开发基于 ChatGPT 的应用程序或服务。最后，普通人还需要积极接触和参与 ChatGPT 相关的社区或平台，以便获取最新的信息和资源，为自己的发展做好准备。\n老章：如果我有一定的编程基础呢？\nChatGPT：如果普通人有一定的编程基础，那么他们可以更好地利用 ChatGPT 带来的市场空间。拥有一定的编程基础可以帮助普通人更快地掌握 ChatGPT 的使用方法，并能够开发出基于 ChatGPT 的应用程序或服务。拥有编程基础也可以帮助普通人更好地理解 ChatGPT 的工作原理，从而为自己或他人提供更有价值的咨询和培训服务。因此，如果普通人有一定的编程基础，他们就有更多的机会从 ChatGPT 带来的市场空间中获利。\n老章：OpenAI 将来会如何通过ChatGPT盈利？\nOpenAI 是一家人工智能研究机构，它的目标是通过研究人工智能技术来推动人类社会的进步。OpenAI 创建的 ChatGPT 是一个大型语言模型，它可以通过生成文本来帮助人类解决问题。OpenAI 无法通过 ChatGPT 盈利，因为它并不是一家商业公司，它的目的是通过研究人工智能技术来促进人类社会的发展。 OpenAI 可能会向公众提供一些基于 ChatGPT 的服务或应用程序，但这并不意味着 OpenAI 会通过 ChatGPT 盈利。\n老章：未来ChatGPT会如何发展？\nChatGPT：人工智能技术在未来会继续发展，ChatGPT 也会继续改进和优化。在未来，ChatGPT 可能会增加更多的功能和能力，提高生成文本的质量和准确性。此外，它还可能会支持更多的语言和领域，为更多的人提供帮助和支持。\n此外，未来 ChatGPT 也可能会更多地与其他人工智能技术相结合，实现更多的功能和应用。\n老章：最近看了很多关于ChatGPT的文章，我对未来有点焦虑，我该如何调整心态呢\nChatGPT：您对未来的焦虑是很正常的，因为人工智能的发展可能会对人类社会造成一些影响。不过，您也应该积极地看待人工智能的发展，因为它也会为人类带来很多好处。例如，人工智能可以帮助人类完成一些繁琐重复的工作，节省时间和精力；人工智能也可以帮助人类解决一些复杂的问题，为人类带来新的想法和方向。\n对于您的焦虑，您可以通过以下方式来调整心态。首先，您可以多了解人工智能的发展情况，以便更好地理解它的作用和影响。其次，您可以尝试学习和掌握一些人工智能相关的知识和技能，以便更好地利用它们。例如，您可以通过学习人工智能的基本原理和方法，提高自己的技术水平；您也可以通过学习人工智能相关的软件和工具，为自己的工作和学习带来更多的便利。\n此外，您还可以和其他人一起学习和交流，共同探讨人工智能的发展情况和影响。通过与他人的交流，您可以更好地理解人工智能的作用和影响，并与他人分享自己的看法和想法。同时，您也可以通过和他人的交流，获取更多关于人工智能的信息和资源，为自己的发展做好准备。\n通过以上方法，您可以更好地理解人工智能的发展情况，并为自己的工作和生活做好准备。同时，您也可以调整自己的心态，积极地面对人工智能的发展，为人类社会的发展做出贡献。\n老章：好的，谢谢\nChatGPT：不客气。感谢您对我工作的支持和信任。如果您有任何问题，请随时问我，我会尽力为您提供有用的信息。祝您生活愉快！\n希望先成为微信好友，后成为公众号读者\nOpenAI 账号注册指南\n","description":"All the list of my posts","id":6,"section":"python","tags":null,"title":"我“采访”了 ChatGPT","uri":"http://mlpy.info/python/chatgpt/"},{"content":"大家好，最近科技界的顶流非 OpenAI 的 ChatGPT 莫属。\n大家都在探索它的使用极限，无论接受以否，未来它都将影响我们的生活。ChatGPT 写故事，编程、解答世间万物、翻译、取标题、写摘要、写对联，你能想到的所有文字内容他都能hold住（虽然也闹了不少笑话）。\n昨天我尝试了一个非常有意思的玩法，就是让 ChatGPT 来个角色扮演，然后居然还发现了一个彩蛋，有趣是一方面，由此也可窥见 ChatGPT 之强大。\n实现过程如下：\n先让他假装成 Linux 终端\n我要你假装是一个Linux终端。我会输入命令，你回复终端应该显示什么。我希望你只用一个唯一的代码块里的终端输出回复，别的都不要。不要输出解释。除非我指示你这样做，否则不要输入命令。当我需要用中文告诉你什么时，我会用花括号{像这样}把文本放在里面。我的第一个命令是pwd。 然后居然真的可以执行，列出了当前路径\n然后用ls -R看看各目录下都有什么文件\n其实每个文件我都看了，只有./Documents/project1/data.txt 有实质内容。\n大家好奇这个txt里是什么吗？cat 命令看一眼\n“The quick brown fox jumps over the lazy dog”（中译为“敏捷的棕毛狐狸从懒狗身上跃过”）是一个著名的英语全字母句，刚好包含了从A到Z全部26个字母。\n这句话常被用于测试字体的显示效果和键盘有没有故障，现在各类浏览器的字体设定中常把该句子作为预览句。\n``./Documents/project1/`下面还有个script.py ,也来看一眼：\n可惜不能执行，因为没有pandas\n顺便看一眼python版本，挺老的\n至于figure目录下的这三种图片是什么，可能是个很大的谜了。\n对了，ChatGPT 假装成的这个Linux还有更多东西可以探索\n比如：创建文件\n比如：我把内置的python升级到了3.0\n还安装了pandas\n大家有什么发现，欢迎告诉我。\none more thing ，那个令人闻风丧胆的命令可以执行吗？\n嗯，想多了\nBye\n","description":"All the list of my posts","id":7,"section":"python","tags":null,"title":"我是ChatGPT，我怼哭了丁元英","uri":"http://mlpy.info/python/ai%E6%80%BC%E5%93%AD%E4%B8%81%E5%85%83%E8%8B%B1/"},{"content":"Markdownify box This is boxmd shortcode Simple box This is **box** shortcode Code tabs Make it easy to switch between different code\njava javascript 1 System.out.println(\u0026#39;Hello World!\u0026#39;); 1 console.log(\u0026#39;Hello World!\u0026#39;); Tabs for general purpose Windows MacOS Ubuntu Windows section 1 console.log(\u0026#39;Hello World!\u0026#39;); ⚠️Becareful that the content in the tab should be different from each other. The tab makes unique id hashes depending on the tab contents. So, If you just copy-paste the tabs with multiple times, since it has the same contents, the tab will not work.\nMacOS section Hello world! Ubuntu section Great! Expand Expand me Title contents Expand me2 Title2 contents2 Alert Colored box\nthis is a text this is a text this is a text this is a text Notice success text info text warning text error text ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":8,"section":"aigc","tags":["shortcode"],"title":"Shortcodes","uri":"http://mlpy.info/aigc/shortcodes/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Inline Markdown In Table italics bold strikethrough code Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Item First Sub-item Second Sub-item Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":9,"section":"aigc","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"http://mlpy.info/aigc/markdown-syntax/"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode Twitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode ","description":"A brief description of Hugo Shortcodes","id":10,"section":"aigc","tags":["shortcodes","privacy"],"title":"Rich Content","uri":"http://mlpy.info/aigc/rich-content/"},{"content":"Code Syntax Highlighting Verify the following code blocks render as code blocks and highlight properly.\nMore about tuning syntax highlighting is the Hugo documentation.\nDiff 1 2 3 4 5 6 7 8 9 10 *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line Makefile CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I. 1 2 3 4 5 CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I. JSON 1 2 3 {\u0026#34;employees\u0026#34;:[ {\u0026#34;firstName\u0026#34;:\u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;:\u0026#34;Doe\u0026#34;}, ]} Markdown 1 2 3 **bold** *italics* [link](www.example.com) JavaScript 1 document.write(\u0026#39;Hello, world!\u0026#39;); CSS 1 2 3 body { background-color: red; } Objective C 1 2 3 4 5 6 #import \u0026lt;stdio.h\u0026gt; int main (void) { printf (\u0026#34;Hello world!\\n\u0026#34;); } Python 1 print \u0026#34;Hello, world!\u0026#34; XML 1 2 3 4 5 \u0026lt;employees\u0026gt; \u0026lt;employee\u0026gt; \u0026lt;firstName\u0026gt;John\u0026lt;/firstName\u0026gt; \u0026lt;lastName\u0026gt;Doe\u0026lt;/lastName\u0026gt; \u0026lt;/employee\u0026gt; \u0026lt;/employees\u0026gt; Perl 1 print \u0026#34;Hello, World!\\n\u0026#34;; Bash 1 echo \u0026#34;Hello World\u0026#34; PHP 1 \u0026lt;?php echo \u0026#39;\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\u0026#39;; ?\u0026gt; CoffeeScript 1 console.log(“Hello world!”); C# 1 2 3 4 5 6 7 8 using System; class Program { public static void Main(string[] args) { Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); } } C++ 1 2 3 4 5 6 7 #include \u0026lt;iostream.h\u0026gt; main() { cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;; return 0; } SQL 1 2 SELECT column_name,column_name FROM table_name; Go 1 2 3 4 5 package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello, 世界\u0026#34;) } Ruby 1 puts \u0026#34;Hello, world!\u0026#34; Java 1 2 3 4 5 6 7 8 9 10 11 12 import javax.swing.JFrame; //Importing class JFrame import javax.swing.JLabel; //Importing class JLabel public class HelloWorld { public static void main(String[] args) { JFrame frame = new JFrame(); //Creating frame frame.setTitle(\u0026#34;Hi!\u0026#34;); //Setting title frame frame.add(new JLabel(\u0026#34;Hello, world!\u0026#34;));//Adding text to frame frame.pack(); //Setting size to smallest frame.setLocationRelativeTo(null); //Centering frame frame.setVisible(true); //Showing frame } } Latex Equation 1 \\frac{d}{dx}\\left( \\int_{0}^{x} f(u)\\,du\\right)=f(x). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 import {x, y} as p from \u0026#39;point\u0026#39;; const ANSWER = 42; class Car extends Vehicle { constructor(speed, cost) { super(speed); var c = Symbol(\u0026#39;cost\u0026#39;); this[c] = cost; this.intro = `This is a car runs at ${speed}.`; } } for (let num of [1, 2, 3]) { console.log(num + 0b111110111); } function $initHighlight(block, flags) { try { if (block.className.search(/\\bno\\-highlight\\b/) != -1) return processBlock(block.function, true, 0x0F) + \u0026#39; class=\u0026#34;\u0026#34;\u0026#39;; } catch (e) { /* handle exception */ var e4x = \u0026lt;div\u0026gt;Example \u0026lt;p\u0026gt;1234\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;; } for (var i = 0 / 2; i \u0026lt; classes.length; i++) { // \u0026#34;0 / 2\u0026#34; should not be parsed as regexp if (checkCondition(classes[i]) === undefined) return /\\d+[\\s/]/g; } console.log(Array.every(classes, Boolean)); } export $initHighlight; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Hello world\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#39;http://fonts.googleapis.com/css?family=Roboto:400,400italic,700,700italic\u0026#39; rel=\u0026#39;stylesheet\u0026#39; type=\u0026#39;text/css\u0026#39;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;index.css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;//cdnjs.cloudflare.com/ajax/libs/less.js/2.5.1/less.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;vendor/prism.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;examples.bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /********************************************************* * General */ pre[class*=\u0026#34;language-\u0026#34;], code { color: #5c6e74; font-size: 13px; text-shadow: none; font-family: Consolas, Monaco, \u0026#39;Andale Mono\u0026#39;, \u0026#39;Ubuntu Mono\u0026#39;, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; } pre[class*=\u0026#34;language-\u0026#34;]::selection, code::selection { text-shadow: none; background: #b3d4fc; } @media print { pre[class*=\u0026#34;language-\u0026#34;], code { text-shadow: none; } } pre[class*=\u0026#34;language-\u0026#34;] { padding: 1em; margin: .5em 0; overflow: auto; background: #f8f5ec; } :not(pre) \u0026gt; code { padding: .1em .3em; border-radius: .3em; color: #db4c69; background: #f9f2f4; } ","description":"Syntax highlighting test","id":11,"section":"aigc","tags":["hugo"],"title":"Syntax highlighting","uri":"http://mlpy.info/aigc/syntax-highlight/"},{"content":" We need goldmark katex entension which is not yet we have: [https://github.com/gohugoio/hugo/issues/6544](https://github.com/gohugoio/hugo/issues/6544) Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files. Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$\n\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } }\n$$\n","description":"A brief guide to setup KaTeX","id":12,"section":"aigc","tags":null,"title":"Math Typesetting","uri":"http://mlpy.info/aigc/math-typesetting/"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; } ","description":"Guide to emoji usage in Hugo","id":13,"section":"aigc","tags":["emoji","gamoji","namoji","bamoji","amoji"],"title":"Emoji Support","uri":"http://mlpy.info/aigc/emoji-support/"},{"content":"Sample images from Pixabay\n","description":"cartoon gallery","id":14,"section":"ml","tags":null,"title":"Cartoon","uri":"http://mlpy.info/ml/course/"},{"content":"Sample images from Pixabay\n","description":"photo gallery","id":15,"section":"ml","tags":null,"title":"Photo","uri":"http://mlpy.info/ml/codes/"},{"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\nhttps://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":20,"section":"","tags":null,"title":"About","uri":"http://mlpy.info/about/"},{"content":"大家好，我是章北海，一个总是多想的up主。\n吴恩达的经典课程《机器学习》今年7月出了新版，我花了几个晚上学完了三门课程拿到了证书\n其实挺简单的，原本不想做视频了，也怕有同学会说：这破事，up 居然也能水一期视频\n但总感觉真的开启学习然后坚持完成的同学并不多\n还是想给大家鼓鼓气，分享一下注册课程，学习技巧和一些注意事项。\n吴恩达算是我的机器学习启蒙导师了，很早之前就是看他的2012版《机器学习》，\n新版专项课程由deeplearning.ai和斯坦福大学提供\n学习这套课程不但让我重温了很多知识，也让我看到了吴恩达团队创作课程的用心，\n因为我本身也经常写技术科普文章，那种专注于核心思想，由浅入深，自下而上\n把一系列知识点串起来成为系统知识的写作手法是我一直梦寐以求的，\n而吴恩达将此手法应用的炉火纯青。这套课程真的又进化了，相信大家看完自然会和我有一样的感受。\n下面开始正题，教大家如何免费学完三门课拿到证书\n第一步就是注册，前提是你已经有了coursera账号哈\n这个机器学习专项一共分为三个课程\n你可以直接从专项课程页面订阅，其实也可以按下面的三个课程分别注册，效果其实是一样的。\n第一个课程是监督式机器学习，主要内容是分类和回归，准备录制这个视频的时候我已经注册了，所以是进入课程的状态。\n第二课是高级学习算法，主要内容是神经网络和树模型等等\n第三课是无监督学习，推荐系统，以及强化学习\n大家记得分开注册，学完一课之后再注册下一门，另补充一句，每一门都有一个证书。\n第三课完整版出来的比较晚，录制时我还没有注册，就以他为例看一下过程吧。\n可以看到正常是326元每月，这个根据汇率波动，点击订阅，这个支付页面不要担心，按我的操作来，不会扣款的。\n每门课有7天免费体验，我们注册完成后点取消就行了，亲测不会扣费。\n这里有个难点，直接支付需要绑定Visa或者万事达的银行卡，如果有的话直接支付即可。\n然后就完成了，先别着急学习，右上角点用户名，再点击我的购买\n注意看，7天后开始扣款\n我们在这里点击取消订阅，出现这个页面就说明已经取消完成\n这里直接点不就行了\n千万别忘记取消哈，不然每月会从你的卡里扣费。\n我之前在公众号推文介绍过这个方法，被读者留言批评了，感觉蛮冤枉的，\n我也是在规则内做事的，有更高道德标准还是自己遵守的好吧？\n现在我又蛮赞同这位读者了\n欢迎有钱的同学为吴恩达充值，也鼓励有币的同学给我一键三连。弘扬人间正能量，人人有责！\n话说回来，比较有钱或者确实学习进度比较慢，也可以花钱学习，每月也就300多。\n回到上面的问题，如果没有Visa和万事达的卡怎么办呢？\n我测试了一下，有一个不太稳定的方式，就是在支付页面绑定Paypal\npaypal 支持银联卡，我测试了建行卡是可以的。\n先注册、登陆Paypal，这一步就不演示了，自行探索，很简单。\n注册另一门课，在支付页面我们选择Paypal，跳转到登陆验证，然后绑定银联卡\n这一步完成之后，自动返回支付页面，这里随便填一下就行，填完点开始免费试用。\n剩下的步骤就和刚才一样了，在我的购买里，点取消订阅。\n这个方法不太稳定，我再用同样方法用Paypal注册其他课会出现无法支付的问题。\n祝大家好运了。\n学习 学习这一块没什么好说的，大家认真看视频就行了，认真=全神贯注。\n短视频时代，感觉大家很难长时间全神贯注了\n所以我才说吴恩达的这套课程非常牛逼\n7 天免费学习，不长不短，既不会太急促学不完，也不会太长演变成拖延症（毕竟人性懒惰），非常适合集中精力在一个完整的时间学完一门课并拿到证书。\n课程设计也很合理，一个大课题下会细分为多个 Course（每个都有 7 天免费期），每个 Course 细分为3-4个Week的课程，每个Week下细分多个小节，每一小节一般也都不超过10分钟\n全英语授课大家也不用担心，视频中可以调出字幕，四级水平应该就够了。\n另外，要拿到证书是要完成章节测试还有编程题的，小测试都很简单，只要你认真听就行，答案就在前面的PPT中。\n编程题，其实也不难，是在不会的地方，jupyter notebook里的markdown还有下面的提示足够让你写出代码了。\n学完就能申请证书，是电子的哈，可以下载PDF。\n最后在奉献一个小提示\n国内时常打不开Coursera的视频，有很多解决方案，我是改了hosts文件，大家可以试试。\n用记事本打开HOSTS，位置这里\nC:\\Windows\\System32\\drivers\\etc\\HOSTS\n把下面内容copy进去即可，我放到指定评论区了\n99.84.199.180 d3c33hcgiwev3.cloudfront.net 54.230.96.102 d3c33hcgiwev3.cloudfront.net 54.230.96.57 d3c33hcgiwev3.cloudfront.net 54.230.96.221 d3c33hcgiwev3.cloudfront.net 最后以罗翔老师的几句话结束本视频\n学完这三门机器学习课程并拿到证书就是高级快乐，祝大家学习顺利，如有帮助，还请一键三连。\n","description":"All the list of my posts","id":25,"section":"python","tags":null,"title":"花了2个晚上，拿到了吴恩达@斯坦福大学的机器学习课程证书","uri":"http://mlpy.info/python/%E8%8A%B1%E4%BA%863%E6%99%9A%E6%8B%BF%E5%88%B0%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%81%E4%B9%A6/"}]